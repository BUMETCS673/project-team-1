{"ast":null,"code":"var _jsxFileName = \"/Users/mali/Desktop/front-end-6/code/pennywise-ui/src/components/user/ExpenseChart.js\";\nimport 'chart.js/auto';\nimport { Pie } from \"react-chartjs-2\";\nimport { Box } from \"@mui/material\";\nimport ExpenseTable from './ExpenseTable';\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = ({\n  expenses\n}) => {\n  const getExpenseCategories = () => {\n    const expenseCategories = new Set();\n    expenses.map(expense => {\n      expenseCategories.add(expense.category);\n    });\n    return Array.from(expenseCategories);\n  };\n  const makeCategory = (cat, dict) => {\n    var catTotal = 0;\n    expenses.map(expense => {\n      if (expense.category === cat) {\n        catTotal += expense.amount;\n        dict.set(expense.category, catTotal);\n      }\n    });\n  };\n  const getCats = () => {\n    const expenseCategories = getExpenseCategories();\n    var dict = new Map();\n    expenseCategories.map(cat => {\n      makeCategory(cat, dict);\n    });\n    return dict;\n  };\n  const myMap = getCats();\n  const values = Array.from(myMap.values());\n  const mappy = Array.from(myMap.entries());\n  const data = {\n    labels: getExpenseCategories().map(category => category),\n    datasets: [{\n      label: 'My First Dataset',\n      data: values.map(value => value),\n      backgroundColor: ['rgba(28, 208, 187, 0.39)', 'rgba(255, 164, 0, 0.5)', 'rgba(0, 169, 215, 0.5)', 'rgba(75, 192, 192, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(201, 203, 207, 0.2)'],\n      borderColor: ['#12C1AC', '#F19E09', '#0496D2', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],\n      borderWidth: 1,\n      hoverOffset: 4\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 400,\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["Pie","Box","ExpenseTable","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpenseChart","expenses","getExpenseCategories","expenseCategories","Set","map","expense","add","category","Array","from","makeCategory","cat","dict","catTotal","amount","set","getCats","Map","myMap","values","mappy","entries","data","labels","datasets","label","value","backgroundColor","borderColor","borderWidth","hoverOffset","children","sx","height","width","display","justifyContent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mali/Desktop/front-end-6/code/pennywise-ui/src/components/user/ExpenseChart.js"],"sourcesContent":["import 'chart.js/auto';\nimport { Pie } from \"react-chartjs-2\" \nimport { Box } from \"@mui/material\"\nimport ExpenseTable from './ExpenseTable';\nimport { useState } from \"react\"\nimport axios from \"axios\"\n\nconst ExpenseChart = ( {expenses} ) => {\n\n    const getExpenseCategories = () => {\n        const expenseCategories = new Set(); \n\n        expenses.map((expense) => {\n            expenseCategories.add(expense.category)\n        })\n        return Array.from(expenseCategories); \n\n    }\n\n    const makeCategory= (cat, dict) => {\n      var catTotal = 0\n\n      expenses.map((expense) => {\n        if (expense.category === cat) {\n          catTotal += expense.amount\n          dict.set(expense.category, catTotal)\n        }\n      })\n    }\n\n\n    const getCats = () => {\n      const expenseCategories = getExpenseCategories() \n      var dict = new Map();\n\n      expenseCategories.map((cat) => {\n        makeCategory(cat, dict)\n      })\n\n      return dict\n      \n    }\n\n    const myMap = getCats()\n    const values = Array.from(myMap.values())\n    const mappy = Array.from(myMap.entries())\n\n    \n\n    const data = {\n        labels: getExpenseCategories().map((category) => category),\n        datasets: [{\n          label: 'My First Dataset',\n          data: values.map((value) => value),\n          backgroundColor: [\n            'rgba(28, 208, 187, 0.39)',\n            'rgba(255, 164, 0, 0.5)',\n            'rgba(0, 169, 215, 0.5)',\n            'rgba(75, 192, 192, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(153, 102, 255, 0.2)',\n            'rgba(201, 203, 207, 0.2)'\n          ],\n          borderColor: [\n            '#12C1AC',\n            '#F19E09',\n            '#0496D2',\n            'rgb(75, 192, 192)',\n            'rgb(54, 162, 235)',\n            'rgb(153, 102, 255)',\n            'rgb(201, 203, 207)'\n          ],\n          borderWidth: 1,\n          hoverOffset: 4\n        }]\n      };\n\n    return (\n\n        <>\n\n        <Box sx={{height: 400, width: \"100%\", display: \"flex\", justifyContent:\"center\"}}>\n\n        <Pie data={data}/>\n        </Box>\n\n        </>\n\n    )\n}  \n\nexport default ExpenseChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}