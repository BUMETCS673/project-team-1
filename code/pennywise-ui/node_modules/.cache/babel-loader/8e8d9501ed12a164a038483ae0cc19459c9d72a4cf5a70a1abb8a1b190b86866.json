{"ast":null,"code":"export const postToken = async token => {\n  const URL = process.env.REACT_APP_API_BASE_URL;\n  try {\n    const res = await fetch(`${URL}/v1/oauth/login`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(token)\n    });\n    if (!res.ok) {\n      throw new Error('Bad server response');\n    }\n    return true;\n  } catch (e) {\n    console.error('POST token Error: ', e.message);\n    return false;\n  }\n};","map":{"version":3,"names":["postToken","token","URL","process","env","REACT_APP_API_BASE_URL","res","fetch","method","credentials","headers","Accept","body","JSON","stringify","ok","Error","e","console","error","message"],"sources":["/Users/jisookim/VisualCode_Github/project-team-1/project-team-1/code/pennywise-ui/src/api/postToken.js"],"sourcesContent":["export const postToken = async (token) => {\n    const URL = process.env.REACT_APP_API_BASE_URL;\n    try {\n      const res = await fetch(`${URL}/v1/oauth/login`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(token),\n      });\n      \n      if (!res.ok) {\n        throw new Error('Bad server response')\n      }\n      return true;\n    } catch (e) {\n      console.error('POST token Error: ', e.message);\n      return false;\n    }\n  };"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAOC,KAAK,IAAK;EACtC,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC9C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,GAAI,iBAAgB,EAAE;MAC/CM,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,KAAK;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACK,GAAG,CAACS,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;IACxC;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,CAAC,CAACG,OAAO,CAAC;IAC9C,OAAO,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}